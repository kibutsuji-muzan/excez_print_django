# Generated by Django 5.0.6 on 2024-06-12 17:20

import accounts.models.UserModel
import accounts.usermanager
import datetime
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import django_otp.util
import upload_validator
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user', models.CharField(max_length=70, unique=True, validators=[django_otp.util.hex_validator], verbose_name='Username')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('object', accounts.usermanager.UserManager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Salt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('salt', models.CharField(default='5563b7f654aae684e4233338a95c91336bf0276cbcb1fa0e320e4e', verbose_name='Salt')),
                ('nonce', models.CharField(default=74231, verbose_name='Nonce')),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'User Type',
                'verbose_name_plural': 'User Types',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('first_name', models.CharField(max_length=20, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=20, null=True, verbose_name='Last Name')),
                ('email', models.EmailField(blank=True, max_length=200, null=True, verbose_name='Email')),
                ('gender', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('OTHER', 'OTHER')], max_length=6, null=True, verbose_name='Gender')),
                ('birthday', models.DateField(null=True, verbose_name='Birth Date')),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('type', models.ManyToManyField(related_name='Type_User', to='accounts.usertype', verbose_name='User Type')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='VerificationDevice',
            fields=[
                ('confirmed', models.BooleanField(default=True, help_text='Is this device ready for use?')),
                ('secret_key', models.CharField(default=accounts.models.UserModel.default_key, help_text='Hex-encoded secret key to generate totp tokens.', max_length=40, unique=True, validators=[django_otp.util.hex_validator], verbose_name='Secret Key')),
                ('last_verified_counter', models.BigIntegerField(default=-1, help_text='The counter value of the latest verified token.The next token must be at a higher counter value.It makes sure a token is used only once.', verbose_name='Last Verified Counter')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='verification_device', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('verified', models.BooleanField(default=False)),
                ('step', models.IntegerField(default=300)),
                ('digits', models.IntegerField(default=6)),
            ],
            options={
                'verbose_name': 'Verification Device',
                'verbose_name_plural': 'Verification Devices',
            },
        ),
        migrations.CreateModel(
            name='LoggedInUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('session_key', models.CharField(blank=True, max_length=32, null=True, verbose_name='Session Key')),
                ('user_agent', models.SlugField(blank=True, max_length=255, null=True, verbose_name='User Agent')),
                ('client_ip', models.SlugField(blank=True, max_length=255, null=True, verbose_name='Client IP')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='logged_in_user', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Logged In User',
                'verbose_name_plural': 'Logged In Users',
            },
        ),
        migrations.CreateModel(
            name='OTPToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(validators=[django_otp.util.hex_validator], verbose_name='Token-Key')),
                ('expiry', models.DateTimeField(default=datetime.datetime(2024, 6, 12, 17, 25, 57, 279915, tzinfo=datetime.timezone.utc), verbose_name='Expiry')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Ceated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='otp_token', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PassResetToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('token', models.CharField(max_length=70, unique=True, verbose_name='Token-Key')),
                ('expiry', models.DateTimeField(default=datetime.datetime(2024, 6, 12, 17, 35, 57, 275476, tzinfo=datetime.timezone.utc), verbose_name='Expiry')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Ceated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reset_token', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileImage',
            fields=[
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile_image', serialize=False, to='accounts.userprofile', verbose_name='Profile')),
                ('image', models.ImageField(default='ProfileImages/download.jpeg', upload_to='ProfileImages/', validators=[upload_validator.FileTypeValidator(allowed_types=['image/*'])], verbose_name='Image')),
                ('alt_txt', models.CharField(default='Your Profile Image', max_length=20, verbose_name='Alternative Text')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created On')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Profile Image',
                'verbose_name_plural': 'Profile Images',
            },
        ),
    ]
