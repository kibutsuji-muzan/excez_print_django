# Generated by Django 5.0.6 on 2024-08-19 09:29

import accounts.usermanager
import datetime
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import django_otp.util
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='IN')),
                ('email', models.EmailField(blank=True, max_length=200, null=True, unique=True, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('object', accounts.usermanager.UserManager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Salt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('salt', models.CharField(default='c1356ccd4146a334efec31c9737c7a006c8eca14a8fd67dd26', verbose_name='Salt')),
                ('nonce', models.CharField(default=94566, verbose_name='Nonce')),
            ],
        ),
        migrations.CreateModel(
            name='VerificationDevice',
            fields=[
                ('confirmed', models.BooleanField(default=True, help_text='Is this device ready for use?')),
                ('secret_key', models.CharField(default='8e05657490a8277610e45fe3e0808b35', help_text='Hex-encoded secret key to generate totp tokens.', max_length=40, validators=[django_otp.util.hex_validator], verbose_name='Secret Key')),
                ('last_verified_counter', models.BigIntegerField(default=-1, help_text='The counter value of the latest verified token.The next token must be at a higher counter value.It makes sure a token is used only once.', verbose_name='Last Verified Counter')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='verification_device', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('verified', models.BooleanField(default=False)),
                ('step', models.IntegerField(default=300)),
                ('digits', models.IntegerField(default=6)),
            ],
            options={
                'verbose_name': 'Verification Device',
                'verbose_name_plural': 'Verification Devices',
            },
        ),
        migrations.CreateModel(
            name='OTPToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(validators=[django_otp.util.hex_validator], verbose_name='Token-Key')),
                ('expiry', models.DateTimeField(default=datetime.datetime(2024, 8, 19, 9, 34, 27, 790562, tzinfo=datetime.timezone.utc), verbose_name='Expiry')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Ceated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='otp_token', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PassResetToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('token', models.CharField(max_length=70, unique=True, verbose_name='Token-Key')),
                ('expiry', models.DateTimeField(default=datetime.datetime(2024, 8, 19, 9, 44, 27, 789451, tzinfo=datetime.timezone.utc), verbose_name='Expiry')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Ceated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reset_token', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
    ]
